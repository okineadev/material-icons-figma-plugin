name: üöÄ Release + Publish

on:
  schedule:
    - cron: "0 3 * * *" # Every day at 3:00 UTC
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: read

    outputs:
      status: ${{ steps.check.outputs.status }}

    steps:
      - name: üì• Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          # Only fetch the `package.json` file from the repository
          sparse-checkout: package.json
          sparse-checkout-cone-mode: false

      - name: üîÑÔ∏è Check for updates
        id: check
        run: |
          release_version=$(npm view material-icon-theme version)
          current_version=$(jq -r '.dependencies."material-icon-theme"' package.json)

          status="skip"

          if [ "$release_version" != "$current_version" ] || [ "$GITHUB_EVENT_NAME" != "schedule" ]; then
            status="release"
          fi

          echo "status=$status" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest

    needs: check-updates
    if: needs.check-updates.outputs.status == 'release'

    permissions:
      contents: write
      id-token: write
      actions: write

    steps:
      - name: üì• Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Required for fetching tags and generating release notes
          fetch-depth: 0

      - name: üîß Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global push.followTags true

      - name: üîß Setup Bun
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2
        with:
          bun-version-file: ".bun-version"

      - name: üì¶ Install dependencies
        run: bun install --frozen-lockfile

      - name: ‚è´ Update material-icon-theme package
        run: bun update material-icon-theme --latest

      - name: üõ†Ô∏è Build plugin
        run: bun run build

      - name: üß™ Run tests
        run: bun run test

      - name: üíæ Commit package update
        run: |
          git add package.json bun.lock
          version=$(jq -r '.dependencies."material-icon-theme"' package.json)
          git commit -m "chore(deps): update \`material-icon-theme\` to \`$version\`"

      - name: üöÄ Prepare release
        run: bun run preversion

      - name: üìú Generate changelog and release notes
        env:
          # Don't run husky on `git commit`
          HUSKY: 0
        run: |
          # Changelog for Figma
          $(bunx changelogen | tail -n +7) > /tmp/figma-changelog.md

          bunx changelogen --release --push
          bunx changelogen github release --token ${{ secrets.GITHUB_TOKEN }}

      - name: üìù Get metadata
        run: |
          VERSION=$(jq -r '.version' package.json)
          NAME=$(jq -r '.name' package.json)

          ZIP_FILE="${NAME}-${VERSION}.zip"

          echo "VERSION=$VERSION"      >> $GITHUB_ENV
          echo "ZIP_FILE=$ZIP_FILE"    >> $GITHUB_ENV

      - name: üì¶ Pack plugin
        run: zip -9TXjr $ZIP_FILE dist
        # -9    : Maximum compression level for best file size
        # -T    : Test the archive after compression to ensure integrity
        # -X    : Exclude extra file attributes (e.g., metadata) to keep the archive clean
        # -j    : Store just the file contents, ignoring directory structure
        # -r    : Recursively add files from the specified directory (dist)

      - name: üîí Attest artifacts
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        # Read: https://docs.github.com/en/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds
        with:
          subject-path: ${{ env.ZIP_FILE }}

      - name: ‚¨ÜÔ∏è Upload plugin to GitHub release
        run: gh release upload v$VERSION $ZIP_FILE
        env:
          GH_TOKEN: ${{ github.token }}

      - name: üöÄ Publish plugin
        run: figcd release -m ./dist/manifest.json --release-notes-file /tmp/figma-changelog.md
        env:
          FIGMA_WEB_AUTHN_TOKEN: ${{ secrets.FIGMA_WEB_AUTHN_TOKEN }}
